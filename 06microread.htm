<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="favicon.ico" type="image/x-icon" />
  <title>Micro Frameworks</title>
  <link Content-Type="text/css" href="advent2021.css" rel="stylesheet" />
</head>

<body>
  <a class="back" href="javascript:history.back()"></a>
  <h1>Reading on Micro Frameworks</h1>

  <fieldset>
    <legend>Excerpt</legend>
    <p>Get more with less and save size and energy.</p>
  </fieldset>

  <p>Cam Jackson did a good job on the web site of martin fowler about extending the pattern of micro-services
    into the space of web applications.</p>

  <p>It is not about building another framework but how to assemble the outcome of many teams into a single web
    application or web site.</p>

  <p>Recommended reading for today: <a href="https://martinfowler.com/articles/micro-frontends.html">https://martinfowler.com/articles/micro-frontends.html</a>
  </p>

  <p>In this december another article came up by an engineer writing about the benefits. See <a href="https://www.sitepoint.com/micro-frontend-architecture-benefits/">https://www.sitepoint.com/micro-frontend-architecture-benefits/</a>.</p>

  <h2>Food for thought</h2>

  <p>If you like to explore this in detail there are several "micro" frontend frameworks around.
    See <a href="https://itnext.io/11-micro-frontends-frameworks-you-should-know-b66913b9cd20">https://itnext.io/11-micro-frontends-frameworks-you-should-know-b66913b9cd20</a>
    for a overview from 2020.</p>

  <p>But why using another framework when HTML+JavaScript+CSS already gives you all options?
    See a book from 2015: <a href="https://web-engineering.info/tech/JsFrontendApp/book">https://web-engineering.info/tech/JsFrontendApp/book</a>
    ... and it got better since then.</p>

  <p>Maybe it is a starting movement to do native development and avoid frameworks.
    Bootstrap 5 (a big but modular CSS framework) announce supporting plain JavaScript instead of jQuery (old), not
    Angular, React,
    Vue etc.</p>


  <h2>Comments and Background</h2>

  <p>There is a lot more to discover in modern browser technologies to create a reliable base
    to implement applications on native technologies and avoid the frameworks that blow up your
    web application. Especially I don't see why many frameworks and SPA applications focus on
    using JavaScript to deliver HTML and CSS. To have one js bundle file only is not a sufficient
    reasoning as HTML can be used and all other ressources can be inlined.
    They don't follow the original design.</p>

  <p>I support another OpenSource project at
    <a href="https://github.com/HomeDing/HomeDing">https://github.com/HomeDing/HomeDing</a>
    that requires to implement a Web Layer for IoT devices with very flexible functionalitythat needs to fit together
    with firmware into just <b>4MByte</b>. Here the goal is to stay within about 1 MByte but to deliver rich
    functionality.
  </p>

  <p>This is where I did some of the PoCs you find in this calendar and the reason for looking into
    native supported technologies as much as it can be used to save size.</p>

  <h2>Tags</h2>
  <div class="taglist"><a href="tag-reading.htm">Reading</a></div>

</body>

</html>